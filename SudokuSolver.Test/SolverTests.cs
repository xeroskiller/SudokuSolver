using SudokuSolver.Solver;
using System;
using Xunit;

namespace SudokuSolver.Test
{
    public class SolverTests
    {
        [Fact]
        public void Test1()
        {
            sbyte[,] example1 = new sbyte[,]
             {
                { 0, 0, 0,   0, 0, 0,   2, 0, 0 },
                { 0, 8, 0,   0, 0, 7,   0, 9, 0 },
                { 6, 0, 2,   0, 0, 0,   5, 0, 0 },
                                                
                { 0, 7, 0,   0, 6, 0,   0, 0, 0 },
                { 0, 0, 0,   9, 0, 1,   0, 0, 0 },
                { 0, 0, 0,   0, 2, 0,   0, 4, 0 },
                                                
                { 0, 0, 5,   0, 0, 0,   6, 0, 3 },
                { 0, 9, 0,   4, 0, 0,   0, 7, 0 },
                { 0, 0, 6,   0, 0, 0,   0, 0, 0 },
             };

            sbyte[,] other = new sbyte[,]
            {
                { 0, 9, 0,   1, 0, 2,   0, 0, 0 },
                { 7, 0, 0,   0, 6, 0,   1, 0, 0 },
                { 4, 0, 0,   0, 0, 3,   0, 0, 0 },
                                                
                { 3, 0, 6,   0, 9, 0,   8, 0, 0 },
                { 0, 0, 0,   0, 0, 0,   0, 2, 4 },
                { 0, 0, 0,   0, 2, 1,   9, 0, 5 },
                                                
                { 0, 0, 0,   0, 0, 0,   0, 3, 7 },
                { 6, 0, 0,   7, 0, 0,   0, 0, 0 },
                { 0, 8, 0,   0, 0, 0,   0, 0, 0 },
            };

            sbyte[,] solution1 = new sbyte[,]
            {
                { 9, 5, 7,   6, 1, 3,   2, 8, 4 },
                { 4, 8, 3,   2, 6, 7,   1, 9, 6 },
                { 6, 1, 2,   8, 4, 9,   5, 3, 7 },
                                                
                { 1, 7, 8,   3, 6, 4,   9, 5, 2 },
                { 5, 2, 4,   9, 7, 1,   3, 6, 8 },
                { 3, 6, 9,   5, 2, 8,   7, 4, 1 },
                                                
                { 8, 4, 5,   7, 9, 2,   6, 1, 3 },
                { 2, 9, 1,   4, 3, 6,   8, 7, 5 },
                { 7, 3, 6,   1, 8, 5,   4, 2, 9 },
            };

            var solver = new Solver2(other);

            solver.Solve();
        }
    }
}
